{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","pokemonName","setPokemonName","pokemonChosen","setPokemonChosen","name","number","species","image","hp","attack","defense","speed","type","pokemon","setPokemon","className","onChange","event","target","value","toLowerCase","onClick","axios","get","then","res","console","log","data","id","sprites","front_default","stats","base_stat","types","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPA+EeA,MA1Ef,WACE,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA8BJ,mBAAS,CACrCK,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,GAAI,GACJC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,KAAM,KATR,mBAAOC,EAAP,KAAgBC,EAAhB,KAgCA,OACE,sBAAKC,UAAU,MAAf,UACI,sBAAKA,UAAU,eAAf,UACA,4CACA,uBACEH,KAAK,OACLI,SAAU,SAACC,GACThB,EAAegB,EAAMC,OAAOC,QAE9BA,MAAOnB,EAAYoB,gBAErB,8BACGpB,GAAe,wBAAQqB,QA/BV,WACpBC,IAAMC,IAAN,4CAA+CvB,IAAewB,MAC5D,SAACC,GACCC,QAAQC,IAAIF,EAAIG,MAChBd,EAAW,CACTV,KAAMJ,EACNK,OAAQoB,EAAIG,KAAKC,GACjBvB,QAASmB,EAAIG,KAAKtB,QAAQF,KAC1BG,MAAOkB,EAAIG,KAAKE,QAAQC,cACxBvB,GAAIiB,EAAIG,KAAKI,MAAM,GAAGC,UACtBxB,OAAQgB,EAAIG,KAAKI,MAAM,GAAGC,UAC1BvB,QAASe,EAAIG,KAAKI,MAAM,GAAGC,UAC3BtB,MAAOc,EAAIG,KAAKI,MAAM,GAAGC,UAC9BrB,KAAMa,EAAIG,KAAKM,MAAM,GAAGtB,KAAKR,OAE1BD,GAAiB,OAgBC,oCAGpB,qBAAKY,UAAU,iBAAf,SACIb,EAGA,qCACE,oBAAIa,UAAU,eAAd,SAA8BF,EAAQT,OACtC,qBAAKW,UAAU,cAAcoB,IAAKtB,EAAQN,MAAO6B,IAAKvB,EAAQT,OAC9D,sBAAKW,UAAU,cAAf,UACE,qBAAIA,UAAU,cAAd,qBAAoC,qBAAIA,UAAU,aAAd,cAA6BF,EAAQR,UAAzE,OACA,qBAAIU,UAAU,cAAd,qBAAqCF,EAAQP,WAC7C,qBAAIS,UAAU,cAAd,mBAAmCF,EAAQD,QAC3C,qBAAIG,UAAU,cAAd,gBAA+B,oBAAIA,UAAU,aAAd,SAA4BF,EAAQL,KAAnE,OACA,qBAAIO,UAAU,cAAd,qBAAoC,oBAAIA,UAAU,aAAd,SAA4BF,EAAQJ,YACxE,qBAAIM,UAAU,cAAd,mBAAkC,oBAAIA,UAAU,aAAd,SAA4BF,EAAQF,QAAtE,aAXJ,oBAAII,UAAU,eAAd,gDC7CKsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4db181d5.chunk.js","sourcesContent":["\nimport './App.css';\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const [pokemonChosen, setPokemonChosen] = useState(false);\n  const [pokemon, setPokemon] = useState({\n    name: \"\",\n    number: \"\",\n    species: \"\",\n    image: \"\",\n    hp: \"\",\n    attack: \"\",\n    defense: \"\",\n    speed: \"\",\n    type: \"\",\n  });\n\n\n  const searchPokemon = () => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`).then(\n      (res) => {\n        console.log(res.data);\n        setPokemon({\n          name: pokemonName,\n          number: res.data.id,\n          species: res.data.species.name,\n          image: res.data.sprites.front_default,\n          hp: res.data.stats[0].base_stat,\n          attack: res.data.stats[1].base_stat,\n          defense: res.data.stats[2].base_stat,\n          speed: res.data.stats[5].base_stat,\n\t\t\t\t\ttype: res.data.types[0].type.name,\n        });\n        setPokemonChosen(true);\n      }\n    );\n  };\n  return (\n    <div className=\"App\">\n        <div className=\"TitleSection\">\n        <h1>Pokédex</h1>\n        <input\n          type=\"text\"\n          onChange={(event) => {\n            setPokemonName(event.target.value);\n          }}\n          value={pokemonName.toLowerCase()}\n        />\n        <div>\n          {pokemonName && <button onClick={searchPokemon}>Search Pokémon</button>}\n        </div>\n      </div>\n      <div className=\"DisplaySection\">\n        {!pokemonChosen ? (\n          <h1 className=\"beige_result\"> Please choose a Pokémon </h1>\n        ) : (\n          <>\n            <h1 className=\"beige_result\">{pokemon.name}</h1>\n            <img className=\"pokemon_img\" src={pokemon.image} alt={pokemon.name} />\n            <div className=\"description\">\n              <h4 className=\"gray_result\">Number: <h4 className=\"red_result\">#{pokemon.number}</h4> </h4>\n              <h4 className=\"gray_result\">Species:{pokemon.species}</h4>\n              <h4 className=\"gray_result\">Type: {pokemon.type}</h4>\n              <h4 className=\"gray_result\">Hp:<h4 className=\"red_result\">{pokemon.hp}</h4> </h4>\n              <h4 className=\"gray_result\">Attack: <h4 className=\"red_result\">{pokemon.attack}</h4></h4>\n              <h4 className=\"gray_result\">Speed:<h4 className=\"red_result\">{pokemon.speed}</h4> </h4>\n            </div>\n\n          </>\n          \n        )}\n      </div>\n    </div>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}